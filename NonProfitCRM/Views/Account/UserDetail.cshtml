@model NonProfitCRM.Models.UserDetail
@{
    List<string> allRoles = new List<string>();
    if (Model.User.UserId == 0)
    {
        ViewBag.PreTitle = "new";
    }
    else
    {
        ViewBag.PreTitle = "detail of";
    }
    ViewBag.Title = "User";
    ViewBag.PathTitle = "list of Users >";
}

<section class="widget">
    <header></header>
    <div class="widget-body">
        @using (Html.BeginForm(null, null, new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post,
            new
            {
                @class = "form-horizontal",
                @data_parsley_priority_enabled = "false",
                @novalidate = "novalidate",
                @id = "validation-form"
            }))
        {
            @Html.HiddenFor(m => m.User.UserId)
            <fieldset>
                <legend>User details for <span class="fw-semi-bold">@Model.User.FirstName @Model.User.LastName</span></legend>
                @Html.Partial("_ValidationSummary", ViewData.ModelState)
                <div class="form-group" >
                    @Html.LabelFor(m => m.User.UserName, "Username", new { @class = "col-sm-3 control-label" })
                    <div class="col-sm-9">
                        @Html.TextBoxFor(m => m.User.UserName, (
                            Model.User.UserId == 0 ?
                                (object)new { @class = "form-control", @required = "required" } :
                                (object)new { @class = "form-control", @required = "required", @disabled = "disabled" }))
                    </div>
                </div>
                @if (Model.User.UserId == 0)
                {
                    <div class="form-group">
                        @Html.LabelFor(m => m.NewPassword, "Password", new { @class = "col-sm-3 control-label" })
                        <div class="col-sm-9">
                            <input type="password" id="NewPassword" name="NewPassword" class="form-control mb-sm"
                                   data-parsley-trigger="change"
                                   data-parsley-minlength="6"
                                   required="required"
                                   value="@Model.NewPassword"
                                   placeholder="Password">
                            <input type="password" id="NewPassword2" name="NewPassword2" class="form-control"
                                   data-parsley-trigger="change"
                                   data-parsley-minlength="6"
                                   data-parsley-equalto="#NewPassword"
                                   required="required"
                                   value="@Model.NewPassword2"
                                   placeholder="Confirm password">
                        </div>
                    </div>
                }
                <div class="form-group">
                    @Html.LabelFor(m => m.User.FirstName, "First Name", new { @class = "col-sm-3 control-label" })
                    <div class="col-sm-9">
                        @Html.TextBoxFor(m => m.User.FirstName, new { @class = "form-control", @required = "required" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.User.LastName, "Last Name", new { @class = "col-sm-3 control-label" })
                    <div class="col-sm-9">
                        @Html.TextBoxFor(m => m.User.LastName, new { @class = "form-control", @required = "required" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.User.Email, "Email", new { @class = "col-sm-3 control-label" })
                    <div class="col-sm-9">
                        @Html.TextBoxFor(m => m.User.Email, new
                   {
                       @class = "form-control",
                       @required = "required",
                       @data_parsley_trigger = "change",
                       @data_parsley_validation_threshold = "1",
                       @type = "email"
                   })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.User.Description, "Description", new { @class = "col-sm-3 control-label" })
                    <div class="col-sm-9">
                        @Html.TextAreaFor(m => m.User.Description, new { @class = "form-control", @rows = "4" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-3 control-label">
                        Disabled
                    </div>
                    <div class="col-sm-9">
                        <div class="checkbox-inline checkbox-ios checkbox-ios-notready">
                            <label for="checkbox-ios1-disabled">
                                <input type="checkbox" value="true" id="checkbox-ios1-disabled" name="User.Deleted" @Html.Raw((Model != null && Model.User.Deleted) ? " checked" : "")>
                            </label>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.User.GroupId, "group", new { @class = "col-sm-3 control-label" })
                    <div class="col-sm-9">
                        @Html.DropDownListFor(m => m.User.GroupId,
                            new SelectList(new NonProfitCRM.Models.Entities().Group.OrderBy(e => e.Name), "Id", "Name", Model.User.GroupId),
                            new { @data_placeholder = "Select user group", @class = "select2 form-control", @tabindex = "-1" })
                    </div>
                </div>
            </fieldset>
            <div class="btn-toolbar">
                <a href="@ViewBag.ReturnUrl" class="btn btn btn-default pull-right">Cancel</a>
                <button type="submit" name="save" class="btn btn btn-primary pull-right">Save changes</button>
                @if (Model.User.UserId != 0)
                {
                    @Html.ActionLink("Change password", "UserDetailChangePassword", "Account",
                        new { id = Model.User.UserId, returnUrl = ViewBag.ReturnUrl },
                        new { @class = "btn btn btn-warning" })
                }
            </div>
        }
    </div>
</section>
@Scripts.Render("~/Content/sing/vendor/form-js")
@Html.Partial("_ParsleyLoader", "validation-form")

<script>
    $(document).ready(function () {
        new Switchery(document.getElementById('checkbox-ios1-disabled'), { color: Sing.colors['brand-danger'], size: 'small' });
        $('.checkbox-ios-notready').each(function (i, elem) { $(elem).removeClass('checkbox-ios-notready') });
    });
</script>
