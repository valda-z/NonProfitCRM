@model IQueryable<NonProfitCRM.Models.ViewEventList>
@{
    ViewBag.PreTitle = "seznam";
    ViewBag.Title = "Akcí";
    ViewBag.PathTitle = "seznam";
}

<section class="widget">
    <header>
        <h4>
            @Html.ActionLink("Vytvořit", "Detail", "Event", new { id = 0, returnUrl = Request.RawUrl }, new { @class = "btn-sm btn-success" })
        </h4>
        <div class="widget-controls">
            @using (Html.BeginForm(null, null, FormMethod.Get))
            {
            <input id="tags" name="tags" class="form-control" type="text" 
                value="@Request.QueryString["tags"]" data-role="tagsinput" />
                <div class="width-200">
                    <div class="input-group input-group-sm input-group-transparent input-group-rounded">
                        <input type="search" name="search" value="@Request.QueryString["search"]" class="form-control"
                               placeholder="hledání ...">
                        <span class="input-group-btn">
                            <button type="submit" class="btn btn-primary">&nbsp;&nbsp;&nbsp;Hledej!</button>
                        </span>
                    </div>
                </div>
            }
        </div>

    </header>
    <div class="widget-body">
        @{
            var grid = new NonProfitCRM.Components.ASWebGrid(Model);
        }
        @grid.Draw(columns: grid.Columns(
         grid.Column("Id", "#"),
         grid.Column("DateOfEvent", "Datum", format: @<text>@Html.ActionLink((string)NonProfitCRM.Components.DateHelper.FormatDateShort(item.DateOfEvent, User.Identity.Name),
"Detail", "Event", new { id = item.Id, returnUrl = Request.RawUrl }, null)</text>),
             grid.Column("Name", "Název", format: @<text>@Html.ActionLink((string)item.Name,
"Detail", "Event", new { id = item.Id, returnUrl = Request.RawUrl }, null)</text>, style: "hidden-xs hidden-sm"),
                 grid.Column("CompanyName", "Firma"),
                 grid.Column("NonProfitOrgName", "Neziskovka", style: "hidden-xs hidden-sm"),
                 grid.Column("ContactCompanyName", "Firma-kontakt", style: "hidden-xs hidden-sm"),
                 grid.Column("ContactNonProfitOrgName", "Neziskovka-kontakt", style: "hidden-xs hidden-sm"),
                 grid.Column("StatusId", "Stav", format: @<text>
                    @{if (item.Closed == null)
                                 {<span class="label label-success">aktivní</span>}
                                 else
                                 {<span class="label label-default">ukončená</span>}
                    }</text>),
                     grid.Column("Deleted", ".", format: @<text>
                        @{if (item.Deleted)
                                     {<span class="label label-danger">smazáno</span>}
                        }</text>)
                         ))
    </div>
</section>


<script>
    var tagsadapter = new Bloodhound({
        datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
        queryTokenizer: Bloodhound.tokenizers.whitespace,
        prefetch: {
            url: '/api/Rest/Tag?guid=' + createGUID(),
            filter: function (list) {
                return $.map(list, function (tagname) {
                    return { name: tagname };
                });
            }
        }
    });
    tagsadapter.initialize();

    $('#tags').tagsinput({
        typeaheadjs: {
            name: 'tags',
            displayKey: 'name',
            valueKey: 'name',
            source: tagsadapter.ttAdapter()
        }
    });
</script>
