@model IQueryable<NonProfitCRM.Models.ViewNonProfitOrgList>
@{
    ViewBag.PreTitle = "seznam";
    ViewBag.Title = "Neziskovek";
    ViewBag.PathTitle = "seznam";
}

<section class="widget">
    <header>
        <h4>
            @Html.ActionLink("Vytvořit", "Detail", "NonProfitOrg", new { id = 0, returnUrl = Request.RawUrl }, new { @class = "btn-sm btn-success" })
        </h4>
        <div class="widget-controls">
            @using (Html.BeginForm(null, null, FormMethod.Get))
            {
                <table border="0">
                    <tr>
                        <td style="min-width: 250px">
                            <input id="tags" name="tags" class="form-control" type="text"
                                   value="@Request.QueryString["tags"]" data-role="tagsinput" />
                        </td>
                        <td>
                            <div class="width-200">
                                <div class="input-group input-group-sm input-group-transparent input-group-rounded">
                                    <input type="search" name="search" value="@Request.QueryString["search"]" class="form-control"
                                           placeholder="hledání ...">
                                    <span class="input-group-btn">
                                        <button type="submit" class="btn btn-primary">&nbsp;&nbsp;&nbsp;Hledej!</button>
                                    </span>
                                </div>
                            </div>
                        </td>
                    </tr>
                </table>
            }
        </div>

    </header>
    <div class="widget-body">
        @{
            var grid = new NonProfitCRM.Components.ASWebGridABC(Model);
        }
        @grid.Draw(columns: grid.Columns(
         grid.Column("Id", "#"),
         grid.Column("Name", "Název", format: @<text>@Html.ActionLink((string)item.Name,
"Detail", "NonProfitOrg", new { id = item.Id, returnUrl = Request.RawUrl }, null)</text>),
         grid.Column("NonProfitOrgTypeName", "Typ", style: "hidden-xs hidden-sm"),
         grid.Column("Capacity", "Kapacita"),
         grid.Column("CountryName", "Stát", style: "hidden-xs hidden-sm"),
         grid.Column("RegionName", "Region", style: "hidden-xs hidden-sm"),
         grid.Column("City", "Město", style: "hidden-xs hidden-sm"),
         grid.Column("Deleted", ".", format: @<text>
            @{if (item.Deleted)
                {<span class="label label-danger">smazáno</span>}
                }</text>)
         ))
    </div>
</section>

<script>
    var tagsadapter = new Bloodhound({
        datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
        queryTokenizer: Bloodhound.tokenizers.whitespace,
        prefetch: {
            url: '/api/Rest/Tag?guid=' + createGUID(),
            filter: function (list) {
                return $.map(list, function (tagname) {
                    return { name: tagname };
                });
            }
        }
    });
    tagsadapter.initialize();

    $('#tags').tagsinput({
        typeaheadjs: {
            name: 'tags',
            displayKey: 'name',
            valueKey: 'name',
            source: tagsadapter.ttAdapter()
        }
    });
</script>